name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  analyze-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.4'
        channel: 'stable'
    
    - name: Install workspace dependencies
      run: dart pub get
    
    - name: Generate code (shared)
      run: |
        cd shared
        dart run build_runner build --delete-conflicting-outputs
    
    - name: Generate code (frontend)
      run: |
        cd frontend
        dart run build_runner build --delete-conflicting-outputs
    
    - name: Analyze workspace
      run: dart analyze --fatal-infos
    
    - name: Test (shared)
      run: |
        cd shared
        dart test
    
    - name: Test (backend)
      run: |
        cd backend
        dart test
    
    - name: Test (frontend)
      run: |
        cd frontend
        flutter test
    
    - name: Check formatting
      run: dart format --set-exit-if-changed shared/ backend/ frontend/lib/ frontend/test/

  build-web:
    runs-on: ubuntu-latest
    needs: analyze-and-test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.4'
        channel: 'stable'
    
    - name: Install workspace dependencies
      run: dart pub get
    
    - name: Generate code
      run: |
        cd shared && dart run build_runner build --delete-conflicting-outputs && cd ..
        cd frontend && dart run build_runner build --delete-conflicting-outputs && cd ..
    
    - name: Build web
      run: |
        cd frontend
        flutter build web --release
    
    - name: Upload web build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: frontend/build/web/

  build-docker:
    runs-on: ubuntu-latest
    needs: analyze-and-test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: docker build -t mynas-manager:${{ github.sha }} .
    
    - name: Login to Docker Hub
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Push Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        docker tag mynas-manager:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/mynas-manager:latest
        docker tag mynas-manager:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/mynas-manager:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/mynas-manager:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/mynas-manager:${{ github.sha }}