name: CI

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  analyze-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.4'
        channel: 'stable'
    
    - name: Install workspace dependencies
      run: dart pub get
    
    - name: Generate code (shared)
      run: |
        cd shared
        dart run build_runner build --delete-conflicting-outputs
    
    - name: Generate code (frontend)
      run: |
        cd frontend
        dart run build_runner build --delete-conflicting-outputs
    
    - name: Analyze workspace
      run: dart analyze --fatal-infos
    
    - name: Test (shared)
      run: |
        cd shared
        dart test
    
    - name: Test (backend)
      run: |
        cd backend
        dart test
    
    - name: Test (frontend)
      run: |
        cd frontend
        flutter test
    
    - name: Test (mynas_desktop)
      run: |
        cd mynas_desktop
        flutter test
    
    - name: Check formatting
      run: dart format --set-exit-if-changed shared/ backend/ frontend/lib/ frontend/test/ mynas_desktop/lib/ mynas_desktop/test/

  build-and-push:
    runs-on: ubuntu-latest
    needs: analyze-and-test
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha
    
    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}